<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Models\CompanyClient;
use Illuminate\Support\Facades\DB;
use App\Models\CompanyClientProfile;
use Illuminate\Support\Facades\Session;
use App\Models\CompanyMaster;
use App\Models\User;
use App\Models\infoTable;

class CompanyClientController extends Controller
{
    public function index(Request $request)
    {
        $search_name = $request->search_name;
        $search_email = $request->search_email;
        $search_state = $request->search_state;
        $search_city = $request->search_city;
        $daterange = $request->daterange;

        $formDate = "";
        $toDate = "";
        if ($request->daterange != "") {
            $daterange = explode("-", $request->daterange);
            $formDate = date('Y-m-d', strtotime($daterange[0]));
            $toDate = date('Y-m-d', strtotime($daterange[1]));
        }
        $session = Session::get('login_web_59ba36addc2b2f9401580f014c7f58ea4e30989d');
        $CompanyMaster = CompanyMaster::where(['companymaster.isDelete' => 0, "iUserId" => $session])
            ->orderBy('strOEMCompanyName', 'ASC')
            ->first();
        $CompanyClients = CompanyClient::select('companyclient.*', 'strStateName', 'strCityName', 'strCompanyClientProfile')
            ->join('icompanyclientprofile', 'icompanyclientprofile.iCompanyClientProfileId', '=', 'companyclient.iCompanyClientProfileId', 'left outer')
            ->join('statemaster', 'statemaster.iStateId', '=', 'companyclient.iStateId', ' left outer')
            ->join('citymaster', 'citymaster.iCityId', '=', 'companyclient.iCityId', ' left outer')
            ->when($request->search_name, fn ($query, $search_name) => $query->where('companyclient.CompanyName', $search_name))
            ->when($request->search_email, fn ($query, $search_email) => $query->where('companyclient.email', $search_email))
            ->when($request->search_state, fn ($query, $search_state) => $query->where('companyclient.iStateId', $search_state))
            ->when($request->search_city, fn ($query, $search_city) => $query->where('companyclient.iCityId', $search_city))
            ->when($request->daterange, fn ($query, $daterange) => $query->whereBetween('companyclient.strEntryDate', [$formDate, $toDate]))
            ->orderBy('iCompanyClientId', 'DESC')->where(['companyclient.isDelete' => 0, 'companyclient.iCompanyId' => $CompanyMaster->iCompanyId])->get();

        $user = User::where(["id" => $session])->first();
        $CompanyClientProfile = CompanyClientProfile::where(['isDelete' => 0, 'iStatus' => 1, 'icompanyId' => $CompanyMaster->iCompanyId])->get();
        $statemasters = DB::table('statemaster')
            ->where(['isDelete' => 0, "iStatus" => 1])
            ->orderBy('strStateName', 'ASC')
            ->get();
        $citymasters = DB::table('citymaster')
            ->where(['isDelete' => 0, "iStatus" => 1])
            ->orderBy('strCityName', 'ASC')
            ->get();

        return view('wladmin.companyclient.index', compact('CompanyClients', 'user', 'CompanyClientProfile', 'statemasters', 'citymasters', 'search_name', 'search_email', 'search_state', 'search_city', 'daterange'));
    }

    public function createview()
    {
        $session = Session::get('login_web_59ba36addc2b2f9401580f014c7f58ea4e30989d');
        $CompanyMaster = CompanyMaster::where(['companymaster.isDelete' => 0, "iUserId" => $session])
            ->orderBy('strOEMCompanyName', 'ASC')
            ->first();
        //$CompanyClient = CompanyClient::orderBy('iCompanyClientId', 'DESC')->where(['isDelete' => 0, 'iStatus' => 1,'iCompanyId'=> $CompanyMaster->iCompanyId])->get();
        $CompanyClientProfile = CompanyClientProfile::where(['isDelete' => 0, 'iStatus' => 1, 'icompanyId' => $CompanyMaster->iCompanyId])->get();

        return view('wladmin.companyclient.add', compact('CompanyClientProfile', 'CompanyMaster'));
    }

    public function basicinfocreate($id)
    {
        $session = Session::get('login_web_59ba36addc2b2f9401580f014c7f58ea4e30989d');
        $CompanyMaster = CompanyMaster::where(['companymaster.isDelete' => 0, "iUserId" => $session])
            ->orderBy('strOEMCompanyName', 'ASC')
            ->first();
        $CompanyClientProfile = CompanyClientProfile::where(['isDelete' => 0, 'iStatus' => 1, 'icompanyId' => $CompanyMaster->iCompanyId, "type" => 1])->get();
        if ($id != 0)
            $CompanyClient =  CompanyClient::where(['companyclient.isDelete' => 0, 'iCompanyClientId' => $id])->first();
        else
            $CompanyClient = null;

        $statemasters = DB::table('statemaster')
            ->where(['isDelete' => 0, "iStatus" => 1])
            ->orderBy('strStateName', 'ASC')
            ->get();
        $citymasters = DB::table('citymaster')
            ->where(['isDelete' => 0, "iStatus" => 1])
            ->orderBy('strCityName', 'ASC')
            ->get();
        return view('wladmin.companyclient.addbasicinfo', compact('CompanyMaster', 'CompanyClientProfile', 'statemasters', 'citymasters', 'id', 'CompanyClient'));
    }

    public function create(Request $request)
    {
        try {
            $id = array();
            foreach ($request->iCompanyClientProfileId as $iCompanyClientProfileId) {
                array_push($id, $iCompanyClientProfileId);
            }
            DB::table('icompanyclientprofile')->whereNotIn("iCompanyClientProfileId", $id)->where("icompanyId", '=', $request->company_id)->update(["isDelete" => 1]);

            $iCounter = 0;
            foreach ($request->field_name as $strCompanyClientProfile) {
                $Data = array(
                    'strCompanyClientProfile' => $strCompanyClientProfile,
                    'type' => $request->type[$iCounter],
                    "icompanyId" => $request->company_id,
                    "strEntryDate" => date('Y-m-d h:i:s'),
                    "strIP" => $request->ip()
                );
                if ($request->iCompanyClientProfileId[$iCounter] != 0) {
                    DB::table('icompanyclientprofile')->where("iCompanyClientProfileId", "=", $request->iCompanyClientProfileId[$iCounter])->update($Data);
                } else {
                    DB::table('icompanyclientprofile')->insertGetId($Data);
                }
                $iCounter++;
            }
            DB::commit();
            $save = $request->save;
            Session::flash('Success', 'Company Client Profile Created Successfully.');
            if ($save == '1') {
                $company_id = $request->company_id;
                echo $company_id;
            } else {
                return redirect()->route('companyclient.create')->with('Success', 'Company Client Profile Created Successfully.');
            }
        } catch (\Throwable $th) {
            DB::rollBack();
            $save = $request->save;
            Session::flash('Error', $th->getMessage());
            if ($save == '1') {
                echo $request->company_id;;
            } else {
                return redirect()->back()->withInput()->with('Error', $th->getMessage());
            }
        }
    }

    public function basicinfostore(Request $request)
    {
        try {
            $session = Session::get('login_web_59ba36addc2b2f9401580f014c7f58ea4e30989d');
            $iCounter = 0;
            foreach ($request->CompanyName as $CompanyName) {
                if ($request->iCompanyClientId == 0) {
                    $Data = array(
                        "CompanyName" => $CompanyName,
                        "email" => $request->email[$iCounter],
                        "owner" => $request->owner[$iCounter],
                        "owneremail" => $request->owneremail[$iCounter],
                        "ownerphone" => $request->ownerphone[$iCounter],
                        "branchOffice" => $request->branchOffice[$iCounter],
                        "address" => $request->address[$iCounter],
                        "iCompanyId" => $request->company_id,
                        "iStateId" => $request->iStateId[$iCounter] ? $request->iStateId[$iCounter] : 0,
                        "iCityId" => $request->iCityId[$iCounter] ? $request->iCityId[$iCounter] : 0,
                        'iCompanyClientProfileId' => $request->iCompanyClientProfileId[$iCounter] ? $request->iCompanyClientProfileId[$iCounter] : 0,
                        "iCompanyId" => $request->company_id,
                        "strEntryDate" => date('Y-m-d h:i:s'),
                        'iEntryBy' => $session,
                        "strIP" => $request->ip()
                    );
                    $clientId = DB::table('companyclient')->insertGetId($Data);
                    Session::flash('Success', 'Customer Company Created Successfully.');
                }else{
                    $Data = array(
                        "CompanyName" => $CompanyName,
                        "email" => $request->email[$iCounter],
                        "owner" => $request->owner[$iCounter],
                        "owneremail" => $request->owneremail[$iCounter],
                        "ownerphone" => $request->ownerphone[$iCounter],
                        "branchOffice" => $request->branchOffice[$iCounter],
                        "address" => $request->address[$iCounter],
                        "iCompanyId" => $request->company_id,
                        "iStateId" => $request->iStateId[$iCounter] ? $request->iStateId[$iCounter] : 0,
                        "iCityId" => $request->iCityId[$iCounter] ? $request->iCityId[$iCounter] : 0,
                        'iCompanyClientProfileId' => $request->iCompanyClientProfileId[$iCounter] ? $request->iCompanyClientProfileId[$iCounter] : 0,
                        "iCompanyId" => $request->company_id,
                        'iEntryBy' => $session,
                        "strIP" => $request->ip()
                    );

                    DB::table('companyclient')->where("iCompanyClientId", "=",$request->iCompanyClientId)->update($Data);
                    $clientId=$request->iCompanyClientId;
                    Session::flash('Success', 'Customer Company Updated Successfully.');
                }
                $iCounter++;
            }
            DB::commit();

            $userdata = User::whereId($session)->first();
            $infoArr = array(
                'tableName'    => "Customer company",
                'tableAutoId'    => $clientId,
                'tableMainField'  => "Customer company Insert",
                'action'     => "Insert",
                'strEntryDate' => date("Y-m-d H:i:s"),
                'actionBy'    => $userdata->first_name . " " . $userdata->last_name,
            );
            $Info = infoTable::create($infoArr);
            $save = $request->save;

            if ($save == '1') {
                echo $clientId;
            } else {
                return redirect()->route('companyclient.index');
            }
        } catch (\Throwable $th) {
            Session::flash('Error', $th->getMessage());
            DB::rollBack();
            $save = $request->save;
            if ($save == '1') {
                echo '0';
            } else {
                return redirect()->back()->withInput()->with('Error', $th->getMessage());
            }
        }
    }

    public function editview(Request $request, $id)
    {
        $session = Session::get('login_web_59ba36addc2b2f9401580f014c7f58ea4e30989d');
        $CompanyMaster = CompanyMaster::where(['companymaster.isDelete' => 0, "iUserId" => $session])
            ->orderBy('strOEMCompanyName', 'ASC')
            ->first();
        $CompanyClientProfile = CompanyClientProfile::where(['isDelete' => 0, 'icompanyId' => $CompanyMaster->iCompanyId, "type" => 1])->get();
        $statemasters = DB::table('statemaster')
            ->where(['isDelete' => 0, "iStatus" => 1])
            ->orderBy('strStateName', 'ASC')
            ->get();
        $citymasters = DB::table('citymaster')
            ->where(['isDelete' => 0, "iStatus" => 1])
            ->orderBy('strCityName', 'ASC')
            ->get();
        $CompanyClients = CompanyClient::where(['companyclient.isDelete' => 0, 'iCompanyClientId' => $id])->first();
        return view('wladmin.companyclient.edit', compact('CompanyMaster', 'CompanyClientProfile', 'statemasters', 'citymasters', 'CompanyClients'));
    }
    public function infoview(Request $request, $id)
    {
        $session = Session::get('login_web_59ba36addc2b2f9401580f014c7f58ea4e30989d');


        $CompanyClients = CompanyClient::where(['companyclient.isDelete' => 0, 'companyclient.iCompanyClientId' => $id])
            ->join('icompanyclientprofile', 'icompanyclientprofile.iCompanyClientProfileId', '=', 'companyclient.iCompanyClientProfileId', 'left outer')
            ->join('statemaster', 'statemaster.iStateId', '=', 'companyclient.iStateId', ' left outer')
            ->join('citymaster', 'citymaster.iCityId', '=', 'companyclient.iCityId', ' left outer')
            ->join('userdefined', 'userdefined.iCompanyClientId', '=', 'companyclient.iCompanyClientId', ' left outer')
            ->first();
        $infoTables = infoTable::where(["tableName" => "Customer company", "tableAutoId" => $id])->orderBy('id', 'Desc')->limit(10)->get();
        $salesperson = DB::table('salesperson')->where(['personType' => 1, "iCompanyClientId" => $id])->orderBy('iSalesId', 'DESC')->get();
        $technicalperson = DB::table('technicalperson')->where(['personType' => 1, "iCompanyClientId" => $id])->orderBy('iTechnicalId', 'DESC')->get();
        $CompanyClients['salesperson'] = $salesperson;
        $CompanyClients['technicalperson'] = $technicalperson;


        return view('wladmin.companyclient.info', compact('CompanyClients', 'infoTables'));
    }
    public function update(Request $request)
    {
        try {
            $session = Session::get('login_web_59ba36addc2b2f9401580f014c7f58ea4e30989d');
            $Data = array(
                'CompanyName' => $request->CompanyName,
                'email' => $request->email,
                'owner' => $request->owner,
                'owneremail' => $request->owneremail,
                'ownerphone' => $request->ownerphone,
                'address' => $request->address,
                'iStateId' => $request->iStateId ? $request->iStateId : 0,
                'iCityId' => $request->iCityId ? $request->iCityId : 0,
                'branchOffice' => $request->branchOffice,
                'iCompanyClientProfileId' => $request->iCompanyClientProfileId ?? 0,
                'strEntryDate' => date('Y-m-d H:i:s'),
                'strIP' => $request->ip(),
                'iEntryBy' => $session
            );
            DB::table('companyclient')->where("iCompanyClientId", "=", $request->iCompanyClientId)->update($Data);

            $userdata = User::whereId($session)->first();
            $infoArr = array(
                'tableName'    => "Customer company",
                'tableAutoId'    => $request->iCompanyClientId,
                'tableMainField'  => "Customer company Update",
                'action'     => "Update",
                'strEntryDate' => date("Y-m-d H:i:s"),
                'actionBy'    => $userdata->first_name . " " . $userdata->last_name,
            );
            $Info = infoTable::create($infoArr);
            $save = $request->save;
            Session::flash('Success', 'Customer Company Updated Successfully.');
            $id = $request->iCompanyClientId;
            if ($save == '1') {
                echo $id;
            } else {
                return redirect()->route('companyclient.index');
            }
        } catch (\Throwable $th) {
            Session::flash('Error', $th->getMessage());
            DB::rollBack();
            $save = $request->save;
            if ($save == '1') {
                echo $request->iCompanyClientId;
            } else {
                return redirect()->route('companyclient.index');
            }
        }
    }

    public function delete($Id)
    {
        DB::table('companyclient')->where(['isDelete' => 0, 'iCompanyClientId' => $Id])->delete();
        return redirect()->route('companyclient.index')->with('Success', 'Customer Company Deleted Successfully!.');
    }

    public function updateStatus(Request $request)
    {
        if ($request->status == 1) {
            CompanyClient::where(['iCompanyClientId' => $request->iCompanyClientId])->update(['iStatus' => 0]);
        } else {
            CompanyClient::where(['iCompanyClientId' => $request->iCompanyClientId])->update(['iStatus' => 1]);
        }
        echo 1;
    }

    public function salescreate(Request $request, $id)
    {
        $session = Session::get('login_web_59ba36addc2b2f9401580f014c7f58ea4e30989d');
        $CompanyMaster = CompanyMaster::where(['companymaster.isDelete' => 0, "iUserId" => $session])
            ->orderBy('strOEMCompanyName', 'ASC')
            ->first();

        return view('wladmin.companyclient.addsales', compact('CompanyMaster', 'id'));
    }
    public function salesstore(Request $request)
    {

        try {
            $session = Session::get('login_web_59ba36addc2b2f9401580f014c7f58ea4e30989d');
            $iCounter = 0;
            foreach ($request->name as $salesName) {
                $Data = array(
                    "salesPersonName" => $salesName,
                    "salesPersonNumber" => $request->phone[$iCounter],
                    "salesPersonEmail" => $request->email[$iCounter],
                    "personType" => '1',
                    "iCompanyId" => $request->company_id,
                    "iCompanyClientId" => $request->companyclient_id,
                    "entryDatetime" => date('Y-m-d h:i:s'),
                    'entryBy' => $session,
                    "strIP" => $request->ip()
                );

                $insertedId = DB::table('salesperson')->insertGetId($Data);

                $iCounter++;
            }

            DB::commit();
            $save = $request->save;

            $userdata = User::whereId($session)->first();
            $infoArr = array(
                'tableName'    => "Customer company",
                'tableAutoId'    => $request->companyclient_id,
                'tableMainField'  => "Customer company Update",
                'action'     => "Update",
                'strEntryDate' => date("Y-m-d H:i:s"),
                'actionBy'    => $userdata->first_name . " " . $userdata->last_name,
            );
            $Info = infoTable::create($infoArr);
            Session::flash('Success', 'Customer Company Sales Person Created Successfully.');
            $id = $request->companyclient_id;
            if ($save == '1') {
                echo $id;
            } else {
                return redirect()->route('companyclient.salescreate', compact('id'));
            }
        } catch (\Throwable $th) {
            Session::flash('Error', $th->getMessage());
            DB::rollBack();
            $save = $request->save;
            if ($save == '1') {
                echo $request->companyclient_id;
            } else {
                return redirect()->back()->withInput()->with('Error', $th->getMessage());
            }
        }
    }

    public function saleseditview(Request $request, $id)
    {

        $CompanyClientProfile = CompanyClient::where(['companyclient.isDelete' => 0, 'iCompanyClientId' => $id])->first();
        $salesPersonList = DB::table('salesperson')->where(["iCompanyClientId" => $CompanyClientProfile->iCompanyClientId, "personType" => 1])->get();

        return view('wladmin.companyclient.salesedit', compact('CompanyClientProfile', 'salesPersonList'));
    }

    public function salesupdate(Request $request)
    {
        try {
            $session = Session::get('login_web_59ba36addc2b2f9401580f014c7f58ea4e30989d');
            $iCounter = 0;
            if (is_array($request->salesId)) {
                foreach ($request->salesId as $isalesId) {
                    if ($isalesId == 0) {
                        $Data = array(
                            "salesPersonName" => $request->name[$iCounter],
                            "salesPersonNumber" => $request->phone[$iCounter],
                            "salesPersonEmail" => $request->email[$iCounter],
                            "personType" => '1',
                            "iCompanyId" => $request->company_id,
                            "iCompanyClientId" => $request->iCompanyClientId,
                            "entryDatetime" => date('Y-m-d h:i:s'),
                            'entryBy' => $session,
                            "strIP" => $request->ip()
                        );
                        $insertedId = DB::table('salesperson')->insertGetId($Data);
                    } else {
                        $Data = array(
                            "salesPersonName" => $request->name[$iCounter],
                            "salesPersonNumber" => $request->phone[$iCounter],
                            "salesPersonEmail" => $request->email[$iCounter],
                            "personType" => '1',
                            "strIP" => $request->ip()
                        );
                        DB::table('salesperson')->where("iSalesId", "=", $isalesId)->update($Data);
                    }

                    $iCounter++;
                }
                $userdata = User::whereId($session)->first();
                $infoArr = array(
                    'tableName'    => "Customer company",
                    'tableAutoId'    => $request->iCompanyClientId,
                    'tableMainField'  => "Customer company Update",
                    'action'     => "Update",
                    'strEntryDate' => date("Y-m-d H:i:s"),
                    'actionBy'    => $userdata->first_name . " " . $userdata->last_name,
                );
                $Info = infoTable::create($infoArr);
                Session::flash('Success', 'Customer Company Sales Person Edited Successfully.');
                $save = $request->save;
                $id = $request->iCompanyClientId;
                if ($save == '1') {
                    echo $id;
                } else {
                    return redirect()->route('companyclient.index');
                }
            } else {
                $Data = array(
                    "salesPersonName" => $request->name,
                    "salesPersonNumber" => $request->phone,
                    "salesPersonEmail" => $request->email,
                    "personType" => '1',
                    "strIP" => $request->ip()
                );
                DB::table('salesperson')->where("iSalesId", "=", $request->salesId)->update($Data);
                $userdata = User::whereId($session)->first();
                $infoArr = array(
                    'tableName'    => "Customer company",
                    'tableAutoId'    => $request->iCompanyClientId,
                    'tableMainField'  => "Customer company Update",
                    'action'     => "Update",
                    'strEntryDate' => date("Y-m-d H:i:s"),
                    'actionBy'    => $userdata->first_name . " " . $userdata->last_name,
                );
                $Info = infoTable::create($infoArr);
                Session::flash('Success', 'Customer Company Sales Person Edited Successfully.');
                echo $id = $request->iCompanyClientId;
            }
        } catch (\Throwable $th) {
            Session::flash('Error', $th->getMessage());
            DB::rollBack();
            $save = $request->save;
            if ($save == '1') {
                echo $request->iCompanyClientId;
            } else {

                return redirect()->route('companyclient.index');
            }
        }
    }

    public function salesdelete($Id)
    {
        DB::table('salesperson')->where(['isDelete' => 0, 'iSalesId' => $Id])->delete();
        Session::flash('Success', 'Customer Company Sales Person Deleted Successfully.');
        echo 1;
    }

    public function technicalcreate(Request $request, $id)
    {
        $session = Session::get('login_web_59ba36addc2b2f9401580f014c7f58ea4e30989d');
        $CompanyMaster = CompanyMaster::where(['companymaster.isDelete' => 0, "iUserId" => $session])
            ->orderBy('strOEMCompanyName', 'ASC')
            ->first();

        return view('wladmin.companyclient.addtechnical', compact('CompanyMaster', 'id'));
    }
    public function technicalstore(Request $request)
    {

        try {
            $session = Session::get('login_web_59ba36addc2b2f9401580f014c7f58ea4e30989d');
            $iCounter = 0;
            foreach ($request->name as $salesName) {
                $Data = array(
                    "technicalPersonName" => $salesName,
                    "technicalPersonNumber" => $request->phone[$iCounter],
                    "technicalPersonEmail" => $request->email[$iCounter],
                    "personType" => '1',
                    "iCompanyId" => $request->company_id,
                    "iCompanyClientId" => $request->companyclient_id,
                    "entryDatetime" => date('Y-m-d h:i:s'),
                    'entryBy' => $session,
                    "strIP" => $request->ip()
                );
                DB::table('technicalperson')->insertGetId($Data);
                $iCounter++;
            }
            DB::commit();
            $save = $request->save;
            $userdata = User::whereId($session)->first();
            $infoArr = array(
                'tableName'    => "Customer company",
                'tableAutoId'    => $request->companyclient_id,
                'tableMainField'  => "Customer company Update",
                'action'     => "Update",
                'strEntryDate' => date("Y-m-d H:i:s"),
                'actionBy'    => $userdata->first_name . " " . $userdata->last_name,
            );
            $Info = infoTable::create($infoArr);
            Session::flash('Success', 'Customer Company Technical Person Created Successfully.');
            $id = $request->company_id;
            if ($save == '1') {
                echo $id;
            } else {
                return redirect()->route('companyclient.technicalcreate', compact('id'));
            }
        } catch (\Throwable $th) {
            DB::rollBack();
            $save = $request->save;
            Session::flash('Error', $th->getMessage());
            if ($save == '1') {
                echo $request->company_id;;
            } else {
                return redirect()->route('companyclient.technicalcreate', compact('id'));
            }
        }
    }

    public function technicaleditview(Request $request, $id)
    {
        $session = Session::get('login_web_59ba36addc2b2f9401580f014c7f58ea4e30989d');
        $CompanyClientProfile = CompanyClient::where(['companyclient.isDelete' => 0, 'iCompanyClientId' => $id])->first();
        $salesPersonList = DB::table('technicalperson')->where(["iCompanyClientId" => $CompanyClientProfile->iCompanyClientId, "personType" => 1])->get();
        return view('wladmin.companyclient.technicaledit', compact('CompanyClientProfile', 'salesPersonList'));
    }

    public function technicalupdate(Request $request)
    {
        try {
            $session = Session::get('login_web_59ba36addc2b2f9401580f014c7f58ea4e30989d');

            $iCounter = 0;
            if (is_array($request->iTechnicalId)) {
                foreach ($request->iTechnicalId as $isalesId) {
                    if ($isalesId == 0) {
                        $Data = array(
                            "technicalPersonName" => $request->name[$iCounter],
                            "technicalPersonNumber" => $request->phone[$iCounter],
                            "technicalPersonEmail" => $request->email[$iCounter],
                            "personType" => '1',
                            "iCompanyId" => $request->company_id,
                            "iCompanyClientId" => $request->iCompanyClientId,
                            "entryDatetime" => date('Y-m-d h:i:s'),
                            'entryBy' => $session,
                            "strIP" => $request->ip()
                        );
                        DB::table('technicalperson')->insertGetId($Data);
                    } else {
                        $Data = array(
                            "technicalPersonName" => $request->name[$iCounter],
                            "technicalPersonNumber" => $request->phone[$iCounter],
                            "technicalPersonEmail" => $request->email[$iCounter],
                            "personType" => '1',
                            "strIP" => $request->ip()
                        );
                        DB::table('technicalperson')->where("iTechnicalId", "=", $isalesId)->update($Data);
                    }
                    $iCounter++;
                }
                $userdata = User::whereId($session)->first();
                $infoArr = array(
                    'tableName'    => "Customer company",
                    'tableAutoId'    => $request->iCompanyClientId,
                    'tableMainField'  => "Customer company Update",
                    'action'     => "Update",
                    'strEntryDate' => date("Y-m-d H:i:s"),
                    'actionBy'    => $userdata->first_name . " " . $userdata->last_name,
                );
                $Info = infoTable::create($infoArr);
                Session::flash('Success', 'Customer Company Technical Person Edited Successfully.');
                $save = $request->save;
                $id = $request->iCompanyClientId;
                if ($save == '1') {
                    echo $id;
                } else {
                    return redirect()->route('companyclient.index');
                }
            } else {
                $Data = array(
                    "technicalPersonName" => $request->name,
                    "technicalPersonNumber" => $request->phone,
                    "technicalPersonEmail" => $request->email,
                    "personType" => '1',
                    "strIP" => $request->ip()
                );
                DB::table('technicalperson')->where("iTechnicalId", "=", $request->salesId)->update($Data);
                $userdata = User::whereId($session)->first();
                $infoArr = array(
                    'tableName'    => "Customer company",
                    'tableAutoId'    => $request->iCompanyClientId,
                    'tableMainField'  => "Customer company Update",
                    'action'     => "Update",
                    'strEntryDate' => date("Y-m-d H:i:s"),
                    'actionBy'    => $userdata->first_name . " " . $userdata->last_name,
                );
                $Info = infoTable::create($infoArr);
                Session::flash('Success', 'Customer Company Technical Person Edited Successfully.');
                $save = $request->save;
                echo $id = $request->iCompanyClientId;
            }
        } catch (\Throwable $th) {
            Session::flash('Error', $th->getMessage());
            DB::rollBack();
            $save = $request->save;
            if ($save == '1') {
                echo $request->iCompanyClientId;
            } else {

                return redirect()->route('companyclient.index');
            }
        }
    }

    public function technicaldelete($Id)
    {
        DB::table('technicalperson')->where(['iTechnicalId' => $Id])->delete();
        Session::flash('Success', 'Customer Company Technical Person Deleted Successfully.');
        echo 1;
    }
    public function userdefinedcreate(Request $request, $id)
    {
        $session = Session::get('login_web_59ba36addc2b2f9401580f014c7f58ea4e30989d');
        $CompanyMaster = CompanyMaster::where(['companymaster.isDelete' => 0, "iUserId" => $session])
            ->orderBy('strOEMCompanyName', 'ASC')
            ->first();
        $userdefined = DB::table('userdefined')->where(['iCompanyClientId' => $id])->first();

        return view('wladmin.companyclient.adduserdefine', compact('CompanyMaster', 'id', 'userdefined'));
    }

    public function userdefinededitview(Request $request, $id)
    {
        $session = Session::get('login_web_59ba36addc2b2f9401580f014c7f58ea4e30989d');
        $CompanyMaster = CompanyMaster::where(['companymaster.isDelete' => 0, "iUserId" => $session])
            ->orderBy('strOEMCompanyName', 'ASC')
            ->first();
        $userdefined = DB::table('userdefined')->where(['iCompanyClientId' => $id])->first();

        return view('wladmin.companyclient.userdefinededit', compact('CompanyMaster', 'id', 'userdefined'));
    }
    public function userdefinedstore(Request $request)
    {

        try {
            $session = Session::get('login_web_59ba36addc2b2f9401580f014c7f58ea4e30989d');

            if ($request->iUserDefineId != 0) {
                $Data = array(
                    "userDefine1" => $request->userdefine1,
                    "userDefine2" => $request->userdefine2,
                    "userDefine3" => $request->userdefine3,
                    "type" => '1',
                    "iCompanyId" => $request->company_id,
                    "iCompanyClientId" => $request->companyclient_id,
                    'entryBy' => $session,

                );
                DB::table('userdefined')->where("iUserDefineId", "=", $request->iUserDefineId)->update($Data);
                Session::flash('Success', 'Customer Company user Defined Edited Successfully.');
            } else {
                $Data = array(
                    "userDefine1" => $request->userdefine1,
                    "userDefine2" => $request->userdefine2,
                    "userDefine3" => $request->userdefine3,
                    "type" => '1',
                    "iCompanyId" => $request->company_id,
                    "iCompanyClientId" => $request->companyclient_id,
                    "entryDatetime" => date('Y-m-d h:i:s'),
                    'entryBy' => $session,
                    "strIP" => $request->ip()
                );
                DB::table('userdefined')->insertGetId($Data);
                Session::flash('Success', 'Customer Company user Defined Created Successfully.');
            }

            DB::commit();
            $save = $request->save;
            $userdata = User::whereId($session)->first();
            $infoArr = array(
                'tableName'    => "Customer company",
                'tableAutoId'    => $request->companyclient_id,
                'tableMainField'  => "Customer company Update",
                'action'     => "Update",
                'strEntryDate' => date("Y-m-d H:i:s"),
                'actionBy'    => $userdata->first_name . " " . $userdata->last_name,
            );
            $Info = infoTable::create($infoArr);
            $id = $request->companyclient_id;
            if ($save == '1') {
                echo $id;
            } else {
                return redirect()->route('companyclient.index');
            }
        } catch (\Throwable $th) {
            DB::rollBack();

            $save = $request->save;
            Session::flash('Error', $th->getMessage());
            if ($save == '1') {
                echo $request->companyclient_id;;
            } else {
                return redirect()->route('companyclient.index');
            }
        }
    }
}
